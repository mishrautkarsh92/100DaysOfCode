//https://leetcode.com/problems/average-of-levels-in-binary-tree/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> avg = new ArrayList<Double>();
  		Queue<TreeNode> queue = new LinkedList<TreeNode>();
  		queue.add(root);
  		while(!queue.isEmpty()) {
  			int levelNum = queue.size();
  			double sum = 0;
  			for(int i=0;i<levelNum;i++) {
  				if(queue.peek().left!=null)queue.offer(queue.peek().left);
  				if(queue.peek().right!=null)queue.offer(queue.peek().right);
  				sum=sum+queue.poll().val;
  			}
  			avg.add(sum/levelNum);
  		}
  		return avg;
    }
}
